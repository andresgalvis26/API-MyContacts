name: Docker Build & Push (Docker Hub)

on:
  push:
    branches: [main, develop]
    tags: ['v*']
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy'
        required: true
        default: 'staging'
        type: choice
        options:
        - staging
        - production

env:
  IMAGE_NAME: api-mycontacts

jobs:
  build-and-push:
    name: Build & Push Docker Image (Docker Hub)
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout cÃ³digo
      uses: actions/checkout@v4

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    # ðŸ”‘ Login en Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    # ðŸ“¦ Build y push a Docker Hub
    - name: Build and push image to Docker Hub
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        platforms: linux/amd64,linux/arm64
        tags: |
          ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest
          ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

    # âœ… Verificar imagen desde Docker Hub
    - name: Verify image (Docker Hub)
      run: |
        docker run --rm -d -p 3000:3000 --name test-container \
        -e SUPABASE_URL=${{ secrets.SUPABASE_URL }} \
        -e SUPABASE_KEY=${{ secrets.SUPABASE_KEY }} \
        -e APPLICATIONINSIGHTS_CONNECTION_STRING=${{ secrets.APPLICATIONINSIGHTS_CONNECTION_STRING }} \
        ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest
        
        sleep 10
        curl -f http://localhost:3000/health || exit 1
        docker stop test-container